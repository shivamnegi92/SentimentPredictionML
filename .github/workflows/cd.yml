name: CD Pipeline

on:
  push:
    branches:
      - main  # Trigger when changes are pushed to the main branch
  pull_request:
    branches:
      - main  # Trigger when there's a pull request to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # The CI/CD runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Deploy FastAPI App
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_MODEL_NAME: "SentimentModel"
          MLFLOW_MODEL_VERSION: "latest"
        run: |
          # Pull the latest model from MLflow (you can modify this if needed)
          model_uri="models:/${MLFLOW_MODEL_NAME}/${MLFLOW_MODEL_VERSION}"
          echo "Deploying model from ${model_uri} to FastAPI service"
          
          # Pull and deploy the Docker container for FastAPI
          docker build -t fastapi-app .
          docker-compose up -d  # This will start FastAPI in detached mode

      - name: Notify success
        run: echo "CD Pipeline executed and deployment successful!"

      - name: Notify failure
        if: failure()
        run: echo "CD Pipeline failed!"
