name: CD Pipeline

on:
  push:
    branches:
      - main  # Trigger when changes are pushed to the main branch

jobs:
  deploy:
    runs-on: ubuntu-22.04


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      
      - name: Force update Python
        run: sudo apt update && sudo apt install python3.10 -y
     
      - name: Verify Python version
        run: python --version



      - name: Install dependencies
        run: |
          cd backend
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          echo "Current directory before running tests:"
          pwd
          ls -l
          cd backend  # Change to the backend directory
          echo "Current directory inside backend before executing tests:"
          pwd
          ls -l
          source venv/bin/activate  # Activate the virtual environment
          export PYTHONPATH=$(pwd)  # Add backend directory to PYTHONPATH
          echo "PYTHONPATH set to: $PYTHONPATH"
          pytest  # Run your tests
  
      - name: Free up disk space
        run: |
          sudo rm -rf /usr/local/lib/android
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          df -h  # Show free space after cleanup
  
           

      - name: Deploy FastAPI App
        env:
          MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          MLFLOW_MODEL_NAME: "SentimentModel"
          MLFLOW_MODEL_VERSION: "latest"
        run: |
          cd backend
          model_uri="models:/${MLFLOW_MODEL_NAME}/${MLFLOW_MODEL_VERSION}"
          echo "Deploying model from ${model_uri} to FastAPI service"

          docker build -t fastapi-app .
          docker-compose up -d  # Start FastAPI in detached mode

      - name: Notify result
        if: success()
        run: echo "Deployment successful!" || echo "Deployment failed!"
        