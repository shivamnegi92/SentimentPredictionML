name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Set to a compatible version for PyTorch

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Debug Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipdeptree
          pipdeptree | grep torch  # Check dependency tree for torch conflicts

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install --no-cache-dir torch==2.5.1  # Install a valid PyTorch version
          pip install -r requirements.txt --no-cache-dir  # Install other dependencies

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest
        continue-on-error: false  # Stop if tests fail

      - name: Lint code
        run: |
          source venv/bin/activate
          pip install flake8
          flake8 .
        continue-on-error: false  # Stop execution on lint failure

      - name: Check for security vulnerabilities
        run: |
          source venv/bin/activate
          pip install safety
          safety check
        continue-on-error: false  # Stop execution if security issues are found

      - name: Notify success
        if: success()
        run: echo "✅ CI Pipeline executed successfully!"

      - name: Notify failure
        if: failure()
        run: echo "❌ CI Pipeline failed!"
